#include<iostream>
using namespace std;
int swap(int a,int b){
    int temp = a;
    a = b;
    b = temp;
    return a,b;
}
void Selection_sort(int arr[],int n){
    for(int i=0;i<n-1;i++){
        int min = i;
        for(int j = i+1;j<n;j++){
                if(arr[j]<arr[min]){
                    min = j;
                }
                if(min!=i){
                    int temp = arr [i];
                    arr[i] = arr[min];
                    arr[min] = temp;
                }
        }
    }
}
void Bubble_sort(int arr[],int n){
    for(int i=0;i<n-1;i++){
        for(int j=0;j<n-1-i;j++){
            if(arr[j]>arr[j+1]){
                int temp = arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
    }
}
void Opti_Bubble_sort(int arr[],int n){
    for(int i=0;i<n-1;i++){
        int flag = 0;
        for(int j=0;j<n-1-i;j++){
            if(arr[j]>arr[j+1]){
                int temp = arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
                flag = 1;
            }
            if (flag = 0){
                break;
            }
        }
    }
}
void Insertion_sort(int arr[],int n){
    for(int i=1;i<n;i++){
        int temp = arr[i];
        int j = i-1;
        while(j>=0&&arr[j]>temp){
                arr[j+1] = arr[j];
                j--;
        } 
            arr[j+1]=temp;
            }
    
}
void Shell_sort(int arr[],int n){
    for(int gap = n/2;gap>0;gap/2){
        for(int j = gap;j<n;j++){
            for(int i=j-gap;i>=0;i-gap){
                if(arr[i+gap]>arr[i]){
                    break;
                }
                else{
                    int temp = arr[i+gap];
                    arr[i+gap] = arr[i];
                    arr[i]=temp;
                }
            }
        }
    }
}
int main(){
    int arr[]={7,4,10,8,3,1};
    //Shell_sort(arr,6);
   for(int i=0;i<6;i++){
    cout<<arr[i]<<"\t";
   }
    cout<<endl;

    return 0;
}
